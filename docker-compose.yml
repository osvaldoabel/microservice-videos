version: "3.5"
services:
    app:
        build: .
        container_name: micro-video-app
        entrypoint: dockerize -template .docker/app/.env:.env -template .docker/app/.env.testing:.env.testing -wait tcp://db:3306 -timeout 40s ./.docker/app/entrypoint.sh
        volumes:
            - ./:/var/www
        environment:
           - _DB_HOST=db
           - _DB_DATABASE=code_micro_videos
           - _DB_USERNAME=root
           - _DB_PASSWORD=1234
           - _TEST_DB_DATABASE=code_micro_videos_test
        networks:
            - app-network
        depends_on:
            - db
            - redis

    nginx:
        build: .docker/nginx
        container_name: micro-video-nginx
        restart: always
        ports:
            - "8009:80"
        volumes:
            - ./:/var/www
        networks:
            - app-network
        tty: true
        depends_on:
            - app

    redis:
        image: redis:alpine
        container_name: micro-video-redis
        ports:
            - "6379:6379"
        command: ["redis-server", "--appendonly", "yes"]
        volumes:
            - /tmp/redis_data/:/var/lib/redis/

        networks:
            - app-network

    db:
        image: mysql:5.7
        command: --innodb-use-native-aio=0
        container_name: micro-video-db
        tty: true
        ports:
            - "3307:3306"
        volumes:
            - .docker/mysql/dbdata:/var/lib/mysql
            - .docker/mysql/init.d:/docker-entrypoint-initdb.d

        environment:
            # - MYSQL_DATABASE=code_micro_videos
            - MYSQL_ROOT_USER=root
            - MYSQL_ROOT_PASSWORD=1234
            - MYSQL_PORT=3306
        networks:
            - app-network

networks:
    app-network:
        name: "app-network"
        driver: "bridge"
